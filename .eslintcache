[{"/Users/devendra/Desktop/poc-bot-builder/src/index.tsx":"1","/Users/devendra/Desktop/poc-bot-builder/src/reportWebVitals.ts":"2","/Users/devendra/Desktop/poc-bot-builder/src/App.tsx":"3","/Users/devendra/Desktop/poc-bot-builder/src/containers/index.tsx":"4","/Users/devendra/Desktop/poc-bot-builder/src/components/index.tsx":"5","/Users/devendra/Desktop/poc-bot-builder/src/containers/Home/index.tsx":"6","/Users/devendra/Desktop/poc-bot-builder/src/containers/NotFound/index.tsx":"7","/Users/devendra/Desktop/poc-bot-builder/src/components/DraggableComponent/index.tsx":"8","/Users/devendra/Desktop/poc-bot-builder/src/constants/DragTypes.js":"9","/Users/devendra/Desktop/poc-bot-builder/src/components/ComponentName/index.tsx":"10","/Users/devendra/Desktop/poc-bot-builder/src/components/common/Loader/index.tsx":"11","/Users/devendra/Desktop/poc-bot-builder/src/components/common/Header/index.tsx":"12","/Users/devendra/Desktop/poc-bot-builder/src/components/common/Layout/index.tsx":"13","/Users/devendra/Desktop/poc-bot-builder/src/components/Creator/index.tsx":"14","/Users/devendra/Desktop/poc-bot-builder/src/components/DesignMenu/index.tsx":"15","/Users/devendra/Desktop/poc-bot-builder/src/components/common/Icon/index.tsx":"16","/Users/devendra/Desktop/poc-bot-builder/src/components/SidebarEditor/index.tsx":"17","/Users/devendra/Desktop/poc-bot-builder/src/components/SidebarEditorBlock/index.tsx":"18","/Users/devendra/Desktop/poc-bot-builder/src/components/NodeBlock/index.tsx":"19","/Users/devendra/Desktop/poc-bot-builder/src/redux/actions/index.ts":"20","/Users/devendra/Desktop/poc-bot-builder/src/redux/types.ts":"21","/Users/devendra/Desktop/poc-bot-builder/src/redux/store.ts":"22","/Users/devendra/Desktop/poc-bot-builder/src/redux/reducers/index.ts":"23","/Users/devendra/Desktop/poc-bot-builder/src/redux/reducers/creatorReducer.ts":"24","/Users/devendra/Desktop/poc-bot-builder/src/components/NodeEditor/index.tsx":"25","/Users/devendra/Desktop/poc-bot-builder/src/utils/helpers.ts":"26","/Users/devendra/Desktop/poc-bot-builder/src/components/DiagramPreview/index.tsx":"27"},{"size":823,"mtime":1626368037284,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1609911194000,"results":"30","hashOfConfig":"29"},{"size":531,"mtime":1626442372167,"results":"31","hashOfConfig":"29"},{"size":153,"mtime":1626585548468,"results":"32","hashOfConfig":"29"},{"size":213,"mtime":1626442265490,"results":"33","hashOfConfig":"29"},{"size":173,"mtime":1626443449640,"results":"34","hashOfConfig":"29"},{"size":220,"mtime":1626442041240,"results":"35","hashOfConfig":"29"},{"size":869,"mtime":1626586263634,"results":"36","hashOfConfig":"29"},{"size":57,"mtime":1626356083481,"results":"37","hashOfConfig":"29"},{"size":130,"mtime":1626425701165,"results":"38","hashOfConfig":"29"},{"size":82,"mtime":1626585440168,"results":"39","hashOfConfig":"29"},{"size":209,"mtime":1626443419348,"results":"40","hashOfConfig":"29"},{"size":273,"mtime":1626443355361,"results":"41","hashOfConfig":"29"},{"size":3244,"mtime":1626617015772,"results":"42","hashOfConfig":"29"},{"size":1081,"mtime":1626450687567,"results":"43","hashOfConfig":"29"},{"size":320,"mtime":1626585445140,"results":"44","hashOfConfig":"29"},{"size":1376,"mtime":1626590364974,"results":"45","hashOfConfig":"29"},{"size":784,"mtime":1626588209774,"results":"46","hashOfConfig":"29"},{"size":1682,"mtime":1626615816619,"results":"47","hashOfConfig":"29"},{"size":391,"mtime":1626615936256,"results":"48","hashOfConfig":"29"},{"size":142,"mtime":1626599891233,"results":"49","hashOfConfig":"29"},{"size":397,"mtime":1626580770068,"results":"50","hashOfConfig":"29"},{"size":187,"mtime":1626599177522,"results":"51","hashOfConfig":"29"},{"size":2413,"mtime":1626617026181,"results":"52","hashOfConfig":"29"},{"size":1145,"mtime":1626593525130,"results":"53","hashOfConfig":"29"},{"size":333,"mtime":1626615953101,"results":"54","hashOfConfig":"29"},{"size":932,"mtime":1626604245812,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"gi75h1",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},"/Users/devendra/Desktop/poc-bot-builder/src/index.tsx",[],["119","120"],"/Users/devendra/Desktop/poc-bot-builder/src/reportWebVitals.ts",[],"/Users/devendra/Desktop/poc-bot-builder/src/App.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/containers/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/containers/Home/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/containers/NotFound/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/DraggableComponent/index.tsx",["121"],"import { FaEllipsisV } from \"react-icons/fa\";\nimport { useDrag } from \"react-dnd\";\n\nimport Icon from \"../common/Icon\";\nimport { DRAG_TYPES } from \"../../constants/DragTypes\";\n\nconst DraggableComponent = ({ ...props }: any) => {\n  const [{ opacity }, drag, preview] = useDrag(() => ({\n    type: DRAG_TYPES.COMPONENT,\n    item: {\n      id: \"ComponentName\",\n      type: DRAG_TYPES.COMPONENT,\n      props: {},\n    },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.5 : 1,\n    }),\n  }));\n\n  return (\n    <div ref={drag} style={{ opacity }} className=\"rz__design-menu--item\">\n      <span>\n        <Icon iconName=\"FaBeer\" />\n        Component Name\n      </span>\n      <span>\n        <FaEllipsisV style={{ marginRight: \"-4px\" }} />\n        <FaEllipsisV style={{ marginLeft: \"-4px\" }} />\n      </span>\n    </div>\n  );\n};\n\nexport default DraggableComponent;\n","/Users/devendra/Desktop/poc-bot-builder/src/constants/DragTypes.js",[],["122","123"],"/Users/devendra/Desktop/poc-bot-builder/src/components/ComponentName/index.tsx",[],["124","125"],"/Users/devendra/Desktop/poc-bot-builder/src/components/common/Loader/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/common/Header/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/common/Layout/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/Creator/index.tsx",["126","127","128"],"import { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  createSchema,\n  useSchema,\n  //   validateNode,\n  //   validateNodes,\n  //   validateSchema,\n  //   validateLink,\n  //   validateLinks,\n  //   validatePort,\n} from \"beautiful-react-diagrams\";\nimport \"beautiful-react-diagrams/styles.css\";\n\nimport { canAllowToLink } from \"../../utils/helpers\";\nimport { updateLinks } from \"../../redux/actions\";\n\nimport NodeBlock from \"../NodeBlock\";\nimport DiagramPreview from \"../DiagramPreview\";\nimport DesignMenu from \"../DesignMenu\";\nimport SidebarEditor from \"../SidebarEditor\";\n\nconst Creator = ({ diagram }: any) => {\n  const activeNodes = diagram.nodes.map((node: any) => {\n    return {\n      ...node,\n      render: node.render === \"NodeBlock\" ? NodeBlock : () => {},\n      inputs: node?.inputs?.length\n        ? node.inputs.map((input: any) => {\n            return {\n              ...input,\n              canLink:\n                input.canLink === \"canAllowToLink\" ? canAllowToLink : null,\n            };\n          })\n        : [],\n      outputs: node?.outputs?.length\n        ? node.outputs.map((output: any) => {\n            return {\n              ...output,\n              canLink:\n                output.canLink === \"canAllowToLink\" ? canAllowToLink : null,\n            };\n          })\n        : [],\n    };\n  });\n\n  const initialSchema = createSchema({\n    ...diagram,\n    nodes: activeNodes,\n  });\n\n  const [schema, { onChange, addNode, removeNode, connect }]: any =\n    useSchema(initialSchema);\n\n  console.log(\"schema=> \", schema);\n\n  const addNewNode = () => {\n    debugger;\n    const nodeId = schema.nodes.length + 1;\n    const guid = uuidv4();\n\n    const nextNode = {\n      id: `node--${guid}`,\n      content: `Node ${nodeId}`,\n      render: NodeBlock,\n      coordinates: [\n        schema.nodes[nodeId - 2].coordinates[0] + 100,\n        schema.nodes[nodeId - 2].coordinates[1] + 100,\n      ],\n      inputs: [\n        {\n          id: `input-port-${guid}`,\n          alignment: \"left\",\n          canLink: canAllowToLink,\n        },\n      ],\n      outputs: [\n        {\n          id: `output-port-${guid}`,\n          alignment: \"right\",\n          canLink: canAllowToLink,\n        },\n      ],\n      data: {\n        canClose: true,\n        canEdit: true,\n        name: \"Node Name\",\n        value: \"Response Value\",\n        onClick: deleteNodeFromSchema,\n      },\n    };\n\n    addNode(nextNode);\n  };\n\n  const deleteNodeFromSchema = (id: any) => {\n    const nodeToRemove = schema.nodes.find((node: any) => {\n      if (node.id === id) {\n        return true;\n      }\n\n      return false;\n    });\n\n    debugger;\n\n    removeNode(nodeToRemove);\n  };\n\n  return (\n    <>\n      <DesignMenu addNewNode={addNewNode} />\n      <SidebarEditor />\n      <DiagramPreview\n        schema={schema}\n        onChange={onChange}\n        addNewNode={addNewNode}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    diagram: state.creator.diagram,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    updateLinks: (payload: any) => dispatch(updateLinks(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Creator);\n","/Users/devendra/Desktop/poc-bot-builder/src/components/DesignMenu/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/common/Icon/index.tsx",[],["129","130"],"/Users/devendra/Desktop/poc-bot-builder/src/components/SidebarEditor/index.tsx",["131","132"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Sidebar, { SidebarStyles } from \"react-sidebar\";\n\nimport { updateSidebar } from \"../../redux/actions\";\nimport SidebarEditorBlock from \"../SidebarEditorBlock\";\n\nconst sidebarStyle: SidebarStyles = {\n  overlay: { zIndex: \"51\" },\n  sidebar: { background: \"white\", width: \"300px\", zIndex: \"52\" },\n};\n\nconst SidebarEditor = ({ editor, updateSidebar }: any) => {\n  const updateSidebarHandler = (isOpen: any, data: any) => {\n    updateSidebar({ isOpen: isOpen, data: data });\n  };\n\n  return (\n    <>\n      <Sidebar\n        open={editor.isOpen}\n        onSetOpen={() => updateSidebarHandler(true, {})}\n        sidebar={\n          <>\n            <SidebarEditorBlock updateSidebar={updateSidebarHandler} />\n          </>\n        }\n        pullRight={true}\n        styles={sidebarStyle}\n        rootClassName=\"rz__editor--root\"\n        sidebarClassName=\"rz__editor--sidebar\"\n        overlayClassName=\"rz__editor--overlay\"\n      >\n        <></>\n      </Sidebar>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    editor: state.creator.editor,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    updateSidebar: (payload: any) => dispatch(updateSidebar(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarEditor);\n","/Users/devendra/Desktop/poc-bot-builder/src/components/SidebarEditorBlock/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/NodeBlock/index.tsx",["133","134"],"import React from \"react\";\nimport { FaRegWindowClose, FaEdit } from \"react-icons/fa\";\n\nimport NodeEditor from \"../NodeEditor\";\n\nconst NodeBlock = (props: any) => {\n  const { id, content, data, inputs, outputs } = props;\n\n  return (\n    <div className=\"rz__node--block\">\n      {data?.canClose ? (\n        <button className=\"rz__node--close\" onClick={() => data.onClick(id)}>\n          <FaRegWindowClose />\n        </button>\n      ) : null}\n\n      <div className=\"rz__node--ports\">\n        {outputs.map((port: any) =>\n          React.cloneElement(port, {\n            style: {\n              position: \"absolute\",\n              top: \"21px\",\n              left: \"10px\",\n              cursor: \"no-drop\",\n              boxSizing: \"content-box\",\n              boxShadow: \"rgb(110 132 154) 0px 0px 0px 1px\",\n              borderRadius: \"50%\",\n              height: \"8px\",\n              width: \"8px\",\n              background:\n                \"linear-gradient(rgba(98, 119, 140, 0.12), rgba(98, 119, 140, 0.24) 100%)\",\n            },\n          })\n        )}\n\n        {inputs.map((port: any) =>\n          React.cloneElement(port, {\n            style: {\n              position: \"absolute\",\n              top: \"18px\",\n              right: \"10px\",\n              cursor: \"copy\",\n              boxSizing: \"content-box\",\n              boxShadow: \"rgb(110 132 154) 0px 0px 0px 1px\",\n              borderRadius: \"50%\",\n              height: \"5px\",\n              width: \"5px\",\n              backgroundColor: \"rgb(110, 132, 154)\",\n              border: \"4px solid white\",\n            },\n          })\n        )}\n      </div>\n\n      <NodeEditor {...props} />\n    </div>\n  );\n};\n\nexport default NodeBlock;\n","/Users/devendra/Desktop/poc-bot-builder/src/redux/actions/index.ts",[],"/Users/devendra/Desktop/poc-bot-builder/src/redux/types.ts",[],"/Users/devendra/Desktop/poc-bot-builder/src/redux/store.ts",[],"/Users/devendra/Desktop/poc-bot-builder/src/redux/reducers/index.ts",[],"/Users/devendra/Desktop/poc-bot-builder/src/redux/reducers/creatorReducer.ts",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/NodeEditor/index.tsx",[],"/Users/devendra/Desktop/poc-bot-builder/src/utils/helpers.ts",[],"/Users/devendra/Desktop/poc-bot-builder/src/components/DiagramPreview/index.tsx",["135","136","137"],"import Diagram from \"beautiful-react-diagrams\";\nimport { useDrop } from \"react-dnd\";\n\nimport { DRAG_TYPES } from \"../../constants/DragTypes\";\n\nconst DiagramPreview = ({ schema, onChange, addNewNode }: any) => {\n  const [{ isOver, isOverCurrent }, drop] = useDrop({\n    accept: DRAG_TYPES.COMPONENT,\n\n    drop(item: any, monitor: any) {\n      const didDrop = monitor.didDrop();\n\n      if (didDrop) {\n        return;\n      }\n\n      console.log(\"item dropped!\", item);\n\n      const componentStructure = {\n        name: item.id,\n        props: {},\n      };\n\n      addNewNode();\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      isOverCurrent: monitor.isOver({ shallow: true }),\n    }),\n  });\n\n  return (\n    <div className=\"rz__canvas\">\n      <div className=\"rz__canvas--preview\" ref={drop}>\n        <Diagram schema={schema} onChange={onChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default DiagramPreview;\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":8,"column":29,"nodeType":"144","messageId":"145","endLine":8,"endColumn":36},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"142","severity":1,"message":"148","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":18},{"ruleId":"142","severity":1,"message":"149","line":1,"column":20,"nodeType":"144","messageId":"145","endLine":1,"endColumn":29},{"ruleId":"142","severity":1,"message":"150","line":56,"column":51,"nodeType":"144","messageId":"145","endLine":56,"endColumn":58},{"ruleId":"138","replacedBy":"151"},{"ruleId":"140","replacedBy":"152"},{"ruleId":"142","severity":1,"message":"148","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"149","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"153","line":2,"column":28,"nodeType":"144","messageId":"145","endLine":2,"endColumn":34},{"ruleId":"142","severity":1,"message":"154","line":7,"column":15,"nodeType":"144","messageId":"145","endLine":7,"endColumn":22},{"ruleId":"142","severity":1,"message":"155","line":7,"column":12,"nodeType":"144","messageId":"145","endLine":7,"endColumn":18},{"ruleId":"142","severity":1,"message":"156","line":7,"column":20,"nodeType":"144","messageId":"145","endLine":7,"endColumn":33},{"ruleId":"142","severity":1,"message":"157","line":19,"column":13,"nodeType":"144","messageId":"145","endLine":19,"endColumn":31},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"@typescript-eslint/no-unused-vars","'preview' is assigned a value but never used.","Identifier","unusedVar",["158"],["159"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'connect' is assigned a value but never used.",["158"],["159"],"'FaEdit' is defined but never used.","'content' is assigned a value but never used.","'isOver' is assigned a value but never used.","'isOverCurrent' is assigned a value but never used.","'componentStructure' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]